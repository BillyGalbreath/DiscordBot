import java.nio.file.Files

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

def mcVersion = "1.12.2"
def forgeVersion = "14.23.0"
def mappingsVersion = "20171003"
def pl3xVersion = "58"
def build = System.getenv()['BUILD_NUMBER'] ?: "SNAPSHOT"
version = "1.6-b" + build

group = "net.pl3x.forge.discord"
archivesBaseName = "DiscordBot"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = mcVersion + "-" + forgeVersion + ".0"
    runDir = "run"

    replace "@DEV_BUILD@", project.version
    replaceIn "DiscordBot.java"

    mappings = "snapshot_" + mappingsVersion
    makeObfSourceJar = false
}

repositories {
    jcenter()
}

dependencies {
    compile files('./libs/JDA-3.3.1_DEV-withDependencies-72d5a74-Nov4.jar')
    compile 'com.vdurmont:emoji-java:4.0.0'
}

shadowJar {
    classifier = ""
    relocate "com.mashape.unirest", "deps.com.mashape.unirest"
    relocate "com.neovisionaries.ws.client", "deps.com.neovisionaries.ws.client"
    relocate "com.sun.jna", "deps.com.sun.jna"
    relocate "com.vdurmont.emoji", "deps.com.vdurmont.emoji"
    relocate "javax.sound", "deps.javax.sound"
    relocate "javazoom", "deps.javazoom"
    relocate "net.dv8tion.jda", "deps.net.dv8tion.jda"
    relocate "net.sourceforge.jaad", "deps.net.sourceforge.jaad"
    relocate "org.json", "deps.org.json"
    relocate "org.kc7bfi.jflac", "deps.orgkc7bfi.jflac"
    relocate "org.slf4j", "deps.org.slf4j"
    relocate "org.tritonus", "deps.org.tritonus"
    relocate "tomp2p.opuswrapper", "deps.tomp2p.opuswrapper"

    relocate "org.apache.http", "deps.org.apache.http"
    relocate "org.apache.commons.collections4", "deps.org.apache.commons.collections4"
    relocate "org.apache.commons.logging", "deps.org.apache.commons.logging"
    relocate "org.apache.commons.codec", "deps.org.apache.commons.codec"
    relocate "org.apache.commons.lang3", "deps.org.apache.commons.lang3"
    dependencies {
        include(dependency('net.dv8tion:JDA:3.3.1_DEV:withDependencies'))
        include(dependency('com.vdurmont:emoji-java:4.0.0'))
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from {
        // trick gradle into including JDA's transitive dependencies
        configurations.provided.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

reobf { shadowJar { mappingType = "SEARGE" } }
tasks.reobfShadowJar.mustRunAfter shadowJar

task setupPl3xForge {
    group = "forgegradle"
    description = "Download the Pl3xForge userdev file for ForgeGradle"
    doFirst {
        println "Checking directory structures..."
        def pl3xDir = new File(System.getProperty("user.home"), ".gradle" + File.separator + "pl3x")
        if (!pl3xDir.exists()) {
            println "Missing pl3x directory. Creating..."
            pl3xDir.mkdirs()
        }
        def userdevDir = new File(System.getProperty("user.home"), ".gradle" + File.separator + "caches" + File.separator + "minecraft" +
                File.separator + "net" + File.separator + "minecraftforge" + File.separator + "forge" + File.separator +
                mcVersion + "-" + forgeVersion + ".0" + File.separator + "snapshot" + File.separator + mappingsVersion)
        if (!userdevDir.exists()) {
            println "Missing userdev directory. Creating..."
            userdevDir.mkdirs()
        }
        println "Checking userdev files..."
        def userdevFile = new File(userdevDir, "forge-" + (String) project.minecraft.version + "-" + forgeVersion + ".0-userdev.jar")
        def tmpFile = new File(pl3xDir, "forge-" + mcVersion + "-" + forgeVersion + "." + pl3xVersion + "-userdev.jar")
        if (!tmpFile.exists() || !userdevFile.exists()) {
            println "Downloading missing Pl3xForge userdev jar (build " + pl3xVersion + ")..."
            new URL("http://pl3x.net/jenkins/job/MinecraftForge/" + pl3xVersion +
                    "/artifact/build/distributions/forge-" + mcVersion + "-" + forgeVersion + "." + pl3xVersion + "-userdev.jar")
                    .withInputStream { i -> tmpFile.withOutputStream { it << i } }
            println "Preparing Pl3xForge jar (build " + pl3xVersion + ")..."
            for (File f : userdevDir.listFiles()) {
                f.delete()
            }
            Files.copy(tmpFile.toPath(), userdevFile.toPath())
        }
        println "Everything up to date!"
        println ""
        println "Please run setupDecompWorkspace task now."
    }
}
